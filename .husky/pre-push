#!/bin/sh
# . "$(dirname "$0")/_/husky.sh" # DEPRECATED: Remove this line

# If in CI, try to activate pnpm explicitly
if [ -n "$CI" ]; then
  # Add the pnpm bin directory (found in the previous error log) to the PATH
  PNPM_BIN_DIR="/home/runner/setup-pnpm/node_modules/.bin"
  if [ -d "$PNPM_BIN_DIR" ]; then
    export PATH="$PNPM_BIN_DIR:$PATH"
    echo "Added $PNPM_BIN_DIR to PATH"
  else
      echo "Warning: pnpm bin directory $PNPM_BIN_DIR not found."
  fi
  # Attempt to source environment setup if possible, or add pnpm path if known
  # This path might need adjustment depending on the CI environment setup
  # For GitHub Actions with pnpm/action-setup, pnpm is often added to PATH automatically,
  # but hooks might run in a different context. Let's try ensuring it's there.
  if [ -f "$HOME/.bash_profile" ]; then
    . "$HOME/.bash_profile"
  elif [ -f "$HOME/.profile" ]; then
     . "$HOME/.profile"
  fi
  # Explicitly add pnpm path if setup actions put it somewhere predictable
  # Example: export PATH=$PNPM_HOME:$PATH
fi

# Prevent direct pushes to main branch (skips check in CI environments)
if [ -z "$CI" ]; then
  protected_branch="main"
  # Use git rev-parse --abbrev-ref HEAD for potentially more robust branch detection
  current_branch=$(git rev-parse --abbrev-ref HEAD)

  if [ "$current_branch" = "$protected_branch" ]; then
    echo "‚ùå You can't push directly to the $protected_branch branch!"
    echo "Please use feature branches and Pull Requests."
    exit 1
  fi

  # Check remote refs being pushed to (covers pushing specific branches)
  while read local_ref local_sha remote_ref remote_sha
  do
    # Extract branch name from ref (e.g., refs/heads/main -> main)
    remote_branch=${remote_ref#refs/heads/}
    if [ "$remote_branch" = "$protected_branch" ]; then
      echo "‚ùå Attempting to push to protected branch '$protected_branch'!"
      echo "Please use feature branches and Pull Requests."
      exit 1
    fi
  done
fi

echo "üîç Running pre-push checks..."

# Ensure pnpm is available
if ! command -v pnpm &> /dev/null
then
    echo "pnpm could not be found, please install it."
    # Let's try to find it via setup-pnpm's typical location as a fallback in CI
    # Removed fallback alias logic, relying on PATH modification above
    # if [ -n "$CI" ] && [ -x "/home/runner/setup-pnpm/node_modules/.bin/pnpm" ]; then
    #     echo "Found pnpm via fallback path, attempting to use it."
    #     alias pnpm='/home/runner/setup-pnpm/node_modules/.bin/pnpm'
    # else
    exit 1
    # fi
fi

# Run the full test suite before pushing
echo "üß™ Running tests..."
pnpm test # REMOVED --passWithNoTests flag

# Check the exit code of the test command
if [ $? -ne 0 ]; then
  echo "‚ùå Tests failed. Please fix the tests before pushing."
  exit 1
fi

echo "‚úÖ Pre-push checks passed."
exit 0 